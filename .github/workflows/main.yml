name: Django-test foodgram

on:
  push:
    branches: [ master ]

jobs:

  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/requirements.txt

      - name: Test with flake8
        run: |
          cd backend/
          python -m flake8

      - name: Test with django tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        run: |
          ls -la
          cd ../
          ls -la
          cd ./backend
          ls -la
          cd ./foodgram
          ls -la
          python manage.py test
        # cd backend/foodgram/


  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 # Проверяет доступность репозитория DockerHub для workflow
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # Вызывает сборщик контейнеров docker
      - name: Login to Docker
        uses: docker/login-action@v1 # Запуск скрипта авторизации на DockerHub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 # Выполняет push образа в DockerHub
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:latest

  send_message:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!

#  deploy:
#
#    runs-on: ubuntu-latest
#    needs: build  # Не запускать сразу, ждать, пока выполнится build
#    steps:
#    - name: executing remote ssh commands to deploy
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USER }}
#        key: ${{ secrets.SSH_KEY }}
#        passphrase: ${{ secrets.SSH_PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
#        script: |
#          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/infra_actions:latest
#          sudo docker stop $(sudo docker ps -a -q)
#          sudo docker run --rm -d -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/infra_actions:latest